# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: solr.apache.org/v1beta1
kind: SolrCloud
metadata:
  name: multiple-backup-repos
spec:
  replicas: 1
  solrImage:
    tag: 8.10
  backupRepositories:
    # "Volume" repositories store backup data in a Kubernetes volume.
    - name: "volume_repository_1"
      volume:
        source:
          persistentVolumeClaim:
            claimName: "pvc-test-1" # PVC expected to already exist!

    # Creates repositories that backup data to Google Cloud Storage ("GCS").
    # GCS credentials are taken from the secret 'gcsCredentialSecret', which
    # should have a key 'service-account-key.json' whose value is a JSON token
    # as described here: https://cloud.google.com/iam/docs/creating-managing-service-account-keys
    #
    # Requires Solr >= 8.9.
    - name: "main_collection_backup_repository"
      gcs:
        bucket: "product_catalog"
        gcsCredentialSecret:
          name: "some-secret-name"
          key: "service-account-key.json"

    # Creates repositories that backup data to AWS S3.
    #
    # Requires Solr >= 8.10.
    - name: "s3-backup-repo"
      s3:
        region: "us-west-2"
        bucket: "product-catalog"
        credentials:
          accessKeyIdSecret: # Optional
            name: aws-secrets
            key: access-key-id
          secretAccessKeySecret: # Optional
            name: aws-secrets
            key: secret-access-key
          sessionTokenSecret: # Optional
            name: aws-secrets
            key: session-token
          credentialsFileSecret: # Optional
            name: aws-credentials
            key: credentials

    - name: "main_collection_backup_repository_log"
      gcs:
        bucket: "log_data"
        gcsCredentialSecret:
          name: "some-secret-name-2"
          key: "service-account-key.json"
        baseLocation: "/logs"
